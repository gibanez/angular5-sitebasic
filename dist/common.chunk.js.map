{"version":3,"sources":["./src/app/admin/service/auth.service.ts","./src/app/admin/service/authguard.service.ts","./src/app/admin/service/index.ts","./src/app/common/model/index.ts","./src/app/common/model/user.ts"],"names":[],"mappings":"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","file":"common.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { reject } from 'q';\nimport { Subject } from 'rxjs/Subject';\nimport { User } from '../../common/model';\n\n\n@Injectable()\nexport class AuthService {\n\n  public auth = false;\n  private user: User;\n\n  // Observable string sources\n  private emitChangeSource = new Subject<any>();\n  // Observable string streams\n  changeEmitted$ = this.emitChangeSource.asObservable();\n  // Service message commands\n  emitChange(change: any) {\n      this.emitChangeSource.next(change);\n  }\n\n  constructor() { }\n\n  isAuth() {\n    return this.auth;\n  }\n\n  login(username:string, passord:string) {\n    console.info(\"LOGIN\")\n    return new Promise((resolve, reject) => {\n\n       if(username == 'admin' && passord == 'admin')\n       {\n        console.info(\"OK\")\n        \n        this.auth = true;\n\n        this.user = new User();\n        this.user.username = \"Admin\";\n        this.user.roles = [\"user-list\", \"user-detail\"];\n\n        resolve(this.user);\n        this.emitChange(this.user);\n       }\n       else\n       {\n        console.error(\"Error\")\n         reject(\"no login\");\n       }\n\n    })\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n  logout() {\n    this.auth = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/service/auth.service.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router:Router, private authService:AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    \n    console.log('Check access');\n    console.info(route.data);\n    console.info(this.authService.getUser());\n\n    if (route.data.role) \n    {\n      this.checkRole(route.data.role);\n    }\n    \n\n    if(this.authService.isAuth())\n    {\n\n      \n\n      return true;\n    }\n    \n    this.router.navigate(['/admin/login']);\n  }\n\n  canActivateChild() {\n    console.log('checking child route access');\n    return true;\n  }\n\n  checkRole(role) {\n    const user  = this.authService.getUser();\n    console.info(user.roles.indexOf(role))\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/service/authguard.service.ts","export * from './authguard.service';\nexport * from './auth.service';\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/service/index.ts","export * from './user';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/model/index.ts","export class User {\n    username: string;\n    roles: Array<string> = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/model/user.ts"],"sourceRoot":"webpack:///"}